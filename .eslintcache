[{"/media/rabin/Disk D/Documents/DEV/web/React/github/src/App.js":"1","/media/rabin/Disk D/Documents/DEV/web/React/github/src/index.js":"2","/media/rabin/Disk D/Documents/DEV/web/React/github/src/reportWebVitals.js":"3"},{"size":2484,"mtime":1612886887275,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1612365003691,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1612365003691,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"usrem5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/rabin/Disk D/Documents/DEV/web/React/github/src/App.js",["15","16","17"],"import React, { Component, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\n\n\nconst CardList = (props) => {\n  return (\n    <>\n      <div className=\"card\">\n        {props.profiles.map(profile => <Card key={profile.id} {...profile} />)}\n         <hr className=\"break\"></hr>\n      </div>\n    </>\n  )\n}\n\nclass Card extends Component {\n  render() { \n    const profile = this.props;\n    return ( \n      <div className=\"profile_card\">\n        <div className=\"card\"\n          style={{width: \"18rem\"}}\n          >\n          <img className=\"card-img-top\" src = {profile.avatar_url} />\n        </div>\n        \n        <div className=\"info card\">\n          <div className=\"name\"><h4>{profile.name}</h4></div>\n          <div className=\"company\">{profile.company}</div>\n          <div className=\"email\">Repositories: {profile.public_repos}</div>\n          <div className=\"email\">Followers: {profile.followers}</div>\n          <div className=\"email\">Following: {profile.following}</div>\n          <div className=\"bio\">{profile.bio}</div>\n          <div className=\"push\">Last Updated: { profile.updated_at}</div>\n        </div>\n      </div>\n     );\n  }\n}\n \nclass Form extends Component {\n  state = {\n    userName: '',\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    console.log(resp.data);\n    this.setState({ userName: '' });\n  }\n  render() { \n    return ( \n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <input type=\"text\"\n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"Enter github username\"\n          required\n        />\n\n        <button>Add card</button>\n\n      </form>\n     );\n  }\n}\n \nclass Profile extends Component {\n  state = { \n     profiles: [],\n  }\n  \n  addNewProfile = (profiledata) => {\n    this.setState(prevState => ({\n      profiles: [...prevState.profiles, profiledata]\n    }));\n  };\n\n  render() { \n    return ( \n       <div className=\"git_profile\">\n      <div className=\"header\">\n          <h2>Github Profiles</h2>\n          <Form onSubmit={this.addNewProfile} />\n          <CardList profiles={this.state.profiles}/>\n      </div>\n    </div>\n     );\n  }\n}\n\nexport default function App() {\n  return (\n    <Profile />\n  );\n}\n","/media/rabin/Disk D/Documents/DEV/web/React/github/src/index.js",[],"/media/rabin/Disk D/Documents/DEV/web/React/github/src/reportWebVitals.js",[],{"ruleId":"18","severity":1,"message":"19","line":1,"column":28,"nodeType":"20","messageId":"21","endLine":1,"endColumn":36},{"ruleId":"18","severity":1,"message":"22","line":3,"column":8,"nodeType":"20","messageId":"21","endLine":3,"endColumn":12},{"ruleId":"23","severity":1,"message":"24","line":27,"column":11,"nodeType":"25","endLine":27,"endColumn":70},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]