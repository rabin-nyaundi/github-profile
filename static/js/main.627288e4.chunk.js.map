{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","className","profiles","map","profile","id","Card","this","style","width","src","avatar_url","name","company","public_repos","followers","following","bio","updated_at","Component","Form","state","userName","handleSubmit","event","a","preventDefault","axios","get","resp","onSubmit","data","console","log","setState","type","value","onChange","target","placeholder","required","Profile","addNewProfile","profiledata","prevState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAe,I,sBCOTA,EAAW,SAACC,GAChB,OACE,mCACE,sBAAKC,UAAU,OAAf,UACGD,EAAME,SAASC,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,eAA2BA,GAAhBA,EAAQC,OACjD,oBAAIJ,UAAU,gBAMjBK,E,uKAEF,IAAMF,EAAUG,KAAKP,MACrB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,OACbO,MAAO,CAACC,MAAO,SADjB,SAGE,qBAAKR,UAAU,eAAeS,IAAON,EAAQO,eAG/C,sBAAKV,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SAAsB,6BAAKG,EAAQQ,SACnC,qBAAKX,UAAU,UAAf,SAA0BG,EAAQS,UAClC,sBAAKZ,UAAU,QAAf,2BAAsCG,EAAQU,gBAC9C,sBAAKb,UAAU,QAAf,wBAAmCG,EAAQW,aAC3C,sBAAKd,UAAU,QAAf,wBAAmCG,EAAQY,aAC3C,qBAAKf,UAAU,MAAf,SAAsBG,EAAQa,MAC9B,sBAAKhB,UAAU,OAAf,2BAAsCG,EAAQc,wB,GAlBrCC,aAyBbC,E,4MACJC,MAAQ,CACNC,SAAU,I,EAGZC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAME,iBADO,SAGMC,IAAMC,IAAN,uCAA0C,EAAKP,MAAMC,WAH3D,OAGPO,EAHO,OAIb,EAAK7B,MAAM8B,SAASD,EAAKE,MACzBC,QAAQC,IAAIJ,EAAKE,MACjB,EAAKG,SAAS,CAAEZ,SAAU,KANb,2C,6GAQL,IAAD,OACP,OACE,uBAAMrB,UAAU,OAAO6B,SAAUvB,KAAKgB,aAAtC,UACE,uBAAOY,KAAK,OACVC,MAAO7B,KAAKc,MAAMC,SAClBe,SAAU,SAAAb,GAAK,OAAI,EAAKU,SAAS,CAAEZ,SAAUE,EAAMc,OAAOF,SAC1DG,YAAY,wBACZC,UAAQ,IAGV,qD,GAvBWrB,aA8BbsB,E,4MACJpB,MAAQ,CACLnB,SAAU,I,EAGbwC,cAAgB,SAACC,GACf,EAAKT,UAAS,SAAAU,GAAS,MAAK,CAC1B1C,SAAS,GAAD,mBAAM0C,EAAU1C,UAAhB,CAA0ByC,S,uDAKpC,OACG,qBAAK1C,UAAU,cAAf,SACD,sBAAKA,UAAU,SAAf,UACI,iDACA,cAAC,EAAD,CAAM6B,SAAUvB,KAAKmC,gBACrB,cAAC,EAAD,CAAUxC,SAAUK,KAAKc,MAAMnB,oB,GAjBnBiB,aAwBP,SAAS0B,IACtB,OACE,cAAC,EAAD,ICnGJ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.627288e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\n\n\nconst CardList = (props) => {\n  return (\n    <>\n      <div className=\"card\">\n        {props.profiles.map(profile => <Card key={profile.id} {...profile} />)}\n         <hr className=\"break\"></hr>\n      </div>\n    </>\n  )\n}\n\nclass Card extends Component {\n  render() { \n    const profile = this.props;\n    return ( \n      <div className=\"profile_card\">\n        <div className=\"card\"\n          style={{width: \"18rem\"}}\n          >\n          <img className=\"card-img-top\" src = {profile.avatar_url} />\n        </div>\n        \n        <div className=\"info card\">\n          <div className=\"name\"><h4>{profile.name}</h4></div>\n          <div className=\"company\">{profile.company}</div>\n          <div className=\"email\">Repositories: {profile.public_repos}</div>\n          <div className=\"email\">Followers: {profile.followers}</div>\n          <div className=\"email\">Following: {profile.following}</div>\n          <div className=\"bio\">{profile.bio}</div>\n          <div className=\"push\">Last Updated: { profile.updated_at}</div>\n        </div>\n      </div>\n     );\n  }\n}\n \nclass Form extends Component {\n  state = {\n    userName: '',\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    console.log(resp.data);\n    this.setState({ userName: '' });\n  }\n  render() { \n    return ( \n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <input type=\"text\"\n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"Enter github username\"\n          required\n        />\n\n        <button>Add card</button>\n\n      </form>\n     );\n  }\n}\n \nclass Profile extends Component {\n  state = { \n     profiles: [],\n  }\n  \n  addNewProfile = (profiledata) => {\n    this.setState(prevState => ({\n      profiles: [...prevState.profiles, profiledata]\n    }));\n  };\n\n  render() { \n    return ( \n       <div className=\"git_profile\">\n      <div className=\"header\">\n          <h2>Github Profiles</h2>\n          <Form onSubmit={this.addNewProfile} />\n          <CardList profiles={this.state.profiles}/>\n      </div>\n    </div>\n     );\n  }\n}\n\nexport default function App() {\n  return (\n    <Profile />\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}